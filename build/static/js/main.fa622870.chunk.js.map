{"version":3,"sources":["UploadComponent.js","App.js","index.js"],"names":["FileUploader","label","accept","FILE_SIZE","url","fileInput","useRef","useState","selectedFile","setSelectedFile","filesArray","setFilesArray","useEffect","Object","keys","map","key","className","method","encType","onSubmit","FormData","append","length","fileName","name","substring","number","size","toFixed","disabled","onClick","file","console","log","removedFiles","filter","removeFile","color","icon","padding","htmlFor","multiple","hidden","type","ref","onChange","e","target","files","Alert","error","current","click","tag","App","basename","path","render","ReactDOM","StrictMode","document","getElementById"],"mappings":"oRAIaA,EAAe,SAAC,GAKtB,IAAD,IAJJC,aAII,MAJI,iBAIJ,EAHJC,EAGI,EAHJA,OAEAC,GACI,EAFJC,IAEI,EADJD,WAEME,EAAYC,iBAAO,MADrB,EAEoCC,mBAAS,IAF7C,mBAEGC,EAFH,KAEiBC,EAFjB,OAGgCF,mBAAS,IAHzC,mBAGGG,EAHH,KAGeC,EAHf,KAKJC,qBAAU,WACRD,EAAcE,OAAOC,KAAKN,GAAcO,KAAI,SAACC,GAAD,OAASR,EAAaQ,SACjE,CAACR,IA2FJ,OACE,qBAAKS,UAAU,yDAAf,SACE,uBACEC,OAAO,OACPD,UAAU,2BACVE,QAAQ,sBACRC,SA/Fe,YACF,IAAIC,UACZC,OAAO,OAAQZ,IAyFtB,UAME,sBAAKO,UAAU,mDAAf,UACE,oBAAIA,UAAU,oBAAd,SACGT,EAAae,OAAS,GACrBb,EAAWK,KAAI,SAACS,GACd,OACE,qBAAwBP,UAAU,sBAAlC,UACE,sBAAMA,UAAU,UAAhB,SACG,gCAEFO,EAASC,KAAKC,UAAU,EAAG,IAAM,MAClC,uBAAOT,UAAU,qBAAjB,UA9FMU,EA+FYH,EAASI,KA9FvCD,EAAS,KACJA,EAAS,QACPA,GAAU,MAAQA,EAAS,SAC5BA,EAAS,MAAME,QAAQ,GAAK,KAC3BF,GAAU,SACXA,EAAS,SAASE,QAAQ,GAAK,UADlC,KA6FS,yBAAQC,UAAQ,EAAhB,UACE,sBAAMb,UAAU,UAAhB,8CAIA,cAAC,IAAD,CACEc,QAAS,kBAhHZ,SAACC,GAClBC,QAAQC,IAAIF,GACZ,IAAMG,EAAe,YAAIzB,GAAY0B,QACnC,SAACZ,GAAD,OAAcA,EAASC,OAASO,KAElCrB,EAAcwB,GA2GqBE,CAAWb,EAASC,OACnCa,MAAM,UACNC,KAAK,WACLC,SAAS,EACTZ,KAAK,YAnBFJ,EAASC,MAzFlC,IAAwBE,OAmHhB,sBAAKV,UAAU,iEAAf,UACE,wBAAOwB,QAAQ,UAAf,UACE,sBAAMxB,UAAU,UAAhB,SAA2BhB,IAC3B,uBACEyC,UAAQ,EACRC,QAAM,EACNlB,KAAK,UACLvB,OAAQA,EACR0C,KAAK,OACLC,IAAKxC,EACLyC,SApHU,SAACC,GACvB,IACMA,EAAEC,OAAOC,MAAMrB,KAAOzB,EACvB+C,EAAA,EA+BEzC,EAAgBsC,EAAEC,OAAOC,OAC9B,MAAOE,GACND,EAAA,SAmFK,eAAC,IAAD,CACEnB,QAAS,SAACgB,GAAD,OAAO1C,EAAU+C,SAAW/C,EAAU+C,QAAQC,SACvDpC,UAAU,iFACVqC,IAAI,SAHN,UAKE,cAAC,IAAD,CAAMhB,MAAM,QAAQC,KAAK,YAAYC,SAAS,EAAOZ,KAAK,OAL5D,OAOG3B,WAKP,cAAC,IAAD,CACEgB,UAAU,8CACV2B,KAAK,SACLN,MAAM,UACNC,MAAM,EACNe,IAAI,SACJ1B,KAAK,KANP,0BCxJO2B,EAdH,WACV,OACE,qBAAKtC,UAAU,yDAAf,SACE,cAAC,IAAD,CAAYuC,SAAS,IAArB,SACE,cAAC,IAAD,UACE,cAAC,IAAD,CACEC,KAAK,IACLC,OAAQ,kBAAM,cAAC,EAAD,CAAcvD,UAAU,OAAOD,OAAO,GAAGE,IAAI,eCPvEuD,IAASD,OACP,cAAC,IAAME,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.fa622870.chunk.js","sourcesContent":["import React, { useRef, useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Alert, Icon, Button } from 'design-react-kit';\n\nexport const FileUploader = ({\n  label = 'Seleziona File',\n  accept,\n  url,\n  FILE_SIZE,\n}) => {\n  const fileInput = useRef(null);\n  const [selectedFile, setSelectedFile] = useState([]);\n  const [filesArray, setFilesArray] = useState([]);\n\n  useEffect(() => {\n    setFilesArray(Object.keys(selectedFile).map((key) => selectedFile[key]));\n  }, [selectedFile]);\n\n  const handleSubmit = () => {\n    const formData = new FormData();\n    formData.append('file', filesArray);\n  };\n\n  const removeFile = (file) => {\n    console.log(file);\n    const removedFiles = [...filesArray].filter(\n      (fileName) => fileName.name !== file\n    );\n    setFilesArray(removedFiles);\n  };\n\n  function returnFileSize(number) {\n    if (number < 1024) {\n      return number + 'bytes';\n    } else if (number >= 1024 && number < 1048576) {\n      return (number / 1024).toFixed(1) + 'KB';\n    } else if (number >= 1048576) {\n      return (number / 1048576).toFixed(1) + 'MB';\n    }\n  }\n  const handleFileInput = (e) => {\n    try {\n      if (e.target.files.size > FILE_SIZE)\n        <Alert\n          closeAriaLabel=\"Close\"\n          color=\"warning\"\n          fade\n          isOpen\n          tag=\"div\"\n          toggle={function noRefCheck() {}}\n          transition={{\n            appear: true,\n            baseClass: 'fade',\n            baseClassActive: 'show',\n            enter: true,\n            exit: true,\n            in: true,\n            mountOnEnter: false,\n            onEnter: function noRefCheck() {},\n            onEntered: function noRefCheck() {},\n            onEntering: function noRefCheck() {},\n            onExit: function noRefCheck() {},\n            onExited: function noRefCheck() {},\n            onExiting: function noRefCheck() {},\n            tag: 'div',\n            timeout: 150,\n            unmountOnExit: true,\n          }}\n        >\n          <strong>\n            Attenzione: il file selezionato supera le dimensioni inizialmente\n            preimpostate{' '}\n          </strong>\n        </Alert>;\n      else setSelectedFile(e.target.files);\n    } catch (error) {\n      <Alert\n        closeAriaLabel=\"Close\"\n        color=\"warning\"\n        fade\n        isOpen\n        tag=\"div\"\n        toggle={function noRefCheck() {}}\n        transition={{\n          appear: true,\n          baseClass: 'fade',\n          baseClassActive: 'show',\n          enter: true,\n          exit: true,\n          in: true,\n          mountOnEnter: false,\n          onEnter: function noRefCheck() {},\n          onEntered: function noRefCheck() {},\n          onEntering: function noRefCheck() {},\n          onExit: function noRefCheck() {},\n          onExited: function noRefCheck() {},\n          onExiting: function noRefCheck() {},\n          tag: 'div',\n          timeout: 150,\n          unmountOnExit: true,\n        }}\n      >\n        <strong>{error}</strong>\n      </Alert>;\n    }\n  };\n\n  return (\n    <div className=\"mt-2  d-flex justify-content-between align-items-start\">\n      <form\n        method=\"post\"\n        className=\" flex d-flex flex-column\"\n        encType=\"multipart/form-data\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"d-flex justify-content-between align-items-start\">\n          <ul className=\" upload-file-list\">\n            {selectedFile.length > 0 &&\n              filesArray.map((fileName) => {\n                return (\n                  <li key={fileName.name} className=\"upload-file success\">\n                    <span className=\"sr-only\">\n                      {'File in via dio caricamento'}\n                    </span>\n                    {fileName.name.substring(0, 10) + '...'}\n                    <small className=\"upload-file-weight\">\n                      {returnFileSize(fileName.size)}\n                    </small>\n\n                    <button disabled>\n                      <span className=\"sr-only\">\n                        Caricamento pronto per l' upload\n                      </span>\n\n                      <Icon\n                        onClick={() => removeFile(fileName.name)}\n                        color=\"primary\"\n                        icon=\"it-close\"\n                        padding={false}\n                        size=\"sm\"\n                      />\n                    </button>\n                  </li>\n                );\n              })}\n          </ul>\n          <div className=\"d-flex justify-content-between align-items-start file-uploader\">\n            <label htmlFor=\"upload1\">\n              <span className=\"sr-only\">{label}</span>\n              <input\n                multiple\n                hidden\n                name=\"upload1\"\n                accept={accept}\n                type=\"file\"\n                ref={fileInput}\n                onChange={handleFileInput}\n              />\n            </label>\n            <Button\n              onClick={(e) => fileInput.current && fileInput.current.click()}\n              className=\"btn btn-primary  flex d-flex align-items-center justify-content-between btn-sm\"\n              tag=\"button\"\n            >\n              <Icon color=\"white\" icon=\"it-upload\" padding={false} size=\"sm\" />\n              &nbsp;\n              {label}\n            </Button>\n          </div>\n        </div>\n\n        <Button\n          className=\" border-0 d-block p-2 bg-primary text-white\"\n          type=\"submit\"\n          color=\"primary\"\n          icon={false}\n          tag=\"button\"\n          size=\"sm\"\n        >\n          Upload\n        </Button>\n      </form>\n    </div>\n  );\n};\n","import './App.css';\nimport React, { useState, useEffect } from 'react';\nimport { Switch, Route, Redirect, HashRouter } from 'react-router-dom';\nimport { FileUploader } from './UploadComponent';\n\nconst App = () => {\n  return (\n    <div className=\"mt-2  d-flex justify-content-between align-items-start\">\n      <HashRouter basename=\"/\">\n        <Switch>\n          <Route\n            path=\"/\"\n            render={() => <FileUploader FILE_SIZE=\"1024\" accept=\"\" url=\"\" />}\n          />\n        </Switch>\n      </HashRouter>\n    </div>\n  );\n};\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}